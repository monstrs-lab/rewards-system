// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file tech/monstrs/referralprograms/v1alpha1/referral-operations.service.proto (package tech.monstrs.referralprograms.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions } from '@bufbuild/protobuf'
import type { FieldList }         from '@bufbuild/protobuf'
import type { JsonReadOptions }   from '@bufbuild/protobuf'
import type { JsonValue }         from '@bufbuild/protobuf'
import type { PartialMessage }    from '@bufbuild/protobuf'
import type { PlainMessage }      from '@bufbuild/protobuf'

import { Message }                from '@bufbuild/protobuf'
import { Timestamp }              from '@bufbuild/protobuf'
import { proto3 }                 from '@bufbuild/protobuf'

import { Query_ID }               from '../../queries/v1alpha1/queries_pb.js'
import { Query_Order }            from '../../queries/v1alpha1/queries_pb.js'
import { Query_Pager }            from '../../queries/v1alpha1/queries_pb.js'

/**
 * @generated from enum tech.monstrs.referralprograms.v1alpha1.ReferralOperationStatus
 */
export enum ReferralOperationStatus {
  /**
   * @generated from enum value: PENDING = 0;
   */
  PENDING = 0,

  /**
   * @generated from enum value: CONFIRMED = 1;
   */
  CONFIRMED = 1,

  /**
   * @generated from enum value: REJECTED = 2;
   */
  REJECTED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ReferralOperationStatus)
proto3.util.setEnumType(
  ReferralOperationStatus,
  'tech.monstrs.referralprograms.v1alpha1.ReferralOperationStatus',
  [
    { no: 0, name: 'PENDING' },
    { no: 1, name: 'CONFIRMED' },
    { no: 2, name: 'REJECTED' },
  ]
)

/**
 * @generated from message tech.monstrs.referralprograms.v1alpha1.ReferralOperation
 */
export class ReferralOperation extends Message<ReferralOperation> {
  /**
   * @generated from field: string id = 1;
   */
  id = ''

  /**
   * @generated from field: string referral_program_id = 2;
   */
  referralProgramId = ''

  /**
   * @generated from field: string referrer_id = 3;
   */
  referrerId = ''

  /**
   * @generated from field: tech.monstrs.referralprograms.v1alpha1.ReferralOperationStatus status = 4;
   */
  status = ReferralOperationStatus.PENDING

  /**
   * @generated from field: tech.monstrs.referralprograms.v1alpha1.ReferralOperation.Source source = 5;
   */
  source?: ReferralOperation_Source

  /**
   * @generated from field: double amount = 6;
   */
  amount = 0

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 7;
   */
  createdAt?: Timestamp

  constructor(data?: PartialMessage<ReferralOperation>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'tech.monstrs.referralprograms.v1alpha1.ReferralOperation'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'referral_program_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 3, name: 'referrer_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 4, name: 'status', kind: 'enum', T: proto3.getEnumType(ReferralOperationStatus) },
    { no: 5, name: 'source', kind: 'message', T: ReferralOperation_Source },
    { no: 6, name: 'amount', kind: 'scalar', T: 1 /* ScalarType.DOUBLE */ },
    { no: 7, name: 'created_at', kind: 'message', T: Timestamp },
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferralOperation {
    return new ReferralOperation().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferralOperation {
    return new ReferralOperation().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferralOperation {
    return new ReferralOperation().fromJsonString(jsonString, options)
  }

  static equals(
    a: ReferralOperation | PlainMessage<ReferralOperation> | undefined,
    b: ReferralOperation | PlainMessage<ReferralOperation> | undefined
  ): boolean {
    return proto3.util.equals(ReferralOperation, a, b)
  }
}

/**
 * @generated from message tech.monstrs.referralprograms.v1alpha1.ReferralOperation.Source
 */
export class ReferralOperation_Source extends Message<ReferralOperation_Source> {
  /**
   * @generated from field: string id = 1;
   */
  id = ''

  /**
   * @generated from field: string type = 2;
   */
  type = ''

  constructor(data?: PartialMessage<ReferralOperation_Source>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'tech.monstrs.referralprograms.v1alpha1.ReferralOperation.Source'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'type', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ReferralOperation_Source {
    return new ReferralOperation_Source().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ReferralOperation_Source {
    return new ReferralOperation_Source().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ReferralOperation_Source {
    return new ReferralOperation_Source().fromJsonString(jsonString, options)
  }

  static equals(
    a: ReferralOperation_Source | PlainMessage<ReferralOperation_Source> | undefined,
    b: ReferralOperation_Source | PlainMessage<ReferralOperation_Source> | undefined
  ): boolean {
    return proto3.util.equals(ReferralOperation_Source, a, b)
  }
}

/**
 * @generated from message tech.monstrs.referralprograms.v1alpha1.ReferralProfit
 */
export class ReferralProfit extends Message<ReferralProfit> {
  /**
   * @generated from field: string id = 1;
   */
  id = ''

  /**
   * @generated from field: string operation_id = 2;
   */
  operationId = ''

  /**
   * @generated from field: string agent_id = 3;
   */
  agentId = ''

  /**
   * @generated from field: string referrer_id = 4;
   */
  referrerId = ''

  /**
   * @generated from field: tech.monstrs.referralprograms.v1alpha1.ReferralOperationStatus status = 5;
   */
  status = ReferralOperationStatus.PENDING

  /**
   * @generated from field: double amount = 6;
   */
  amount = 0

  /**
   * @generated from field: double profit = 7;
   */
  profit = 0

  /**
   * @generated from field: int32 percentage = 8;
   */
  percentage = 0

  /**
   * @generated from field: int32 level = 9;
   */
  level = 0

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp

  constructor(data?: PartialMessage<ReferralProfit>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'tech.monstrs.referralprograms.v1alpha1.ReferralProfit'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'operation_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 3, name: 'agent_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 4, name: 'referrer_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 5, name: 'status', kind: 'enum', T: proto3.getEnumType(ReferralOperationStatus) },
    { no: 6, name: 'amount', kind: 'scalar', T: 1 /* ScalarType.DOUBLE */ },
    { no: 7, name: 'profit', kind: 'scalar', T: 1 /* ScalarType.DOUBLE */ },
    { no: 8, name: 'percentage', kind: 'scalar', T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: 'level', kind: 'scalar', T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: 'created_at', kind: 'message', T: Timestamp },
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferralProfit {
    return new ReferralProfit().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferralProfit {
    return new ReferralProfit().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferralProfit {
    return new ReferralProfit().fromJsonString(jsonString, options)
  }

  static equals(
    a: ReferralProfit | PlainMessage<ReferralProfit> | undefined,
    b: ReferralProfit | PlainMessage<ReferralProfit> | undefined
  ): boolean {
    return proto3.util.equals(ReferralProfit, a, b)
  }
}

/**
 * @generated from message tech.monstrs.referralprograms.v1alpha1.CreateReferralOperationRequest
 */
export class CreateReferralOperationRequest extends Message<CreateReferralOperationRequest> {
  /**
   * @generated from field: string referral_program = 1;
   */
  referralProgram = ''

  /**
   * @generated from field: string source_id = 2;
   */
  sourceId = ''

  /**
   * @generated from field: string source_type = 3;
   */
  sourceType = ''

  /**
   * @generated from field: string referrer_id = 4;
   */
  referrerId = ''

  /**
   * @generated from field: double amount = 5;
   */
  amount = 0

  constructor(data?: PartialMessage<CreateReferralOperationRequest>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'tech.monstrs.referralprograms.v1alpha1.CreateReferralOperationRequest'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'referral_program', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'source_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 3, name: 'source_type', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 4, name: 'referrer_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 5, name: 'amount', kind: 'scalar', T: 1 /* ScalarType.DOUBLE */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): CreateReferralOperationRequest {
    return new CreateReferralOperationRequest().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): CreateReferralOperationRequest {
    return new CreateReferralOperationRequest().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): CreateReferralOperationRequest {
    return new CreateReferralOperationRequest().fromJsonString(jsonString, options)
  }

  static equals(
    a: CreateReferralOperationRequest | PlainMessage<CreateReferralOperationRequest> | undefined,
    b: CreateReferralOperationRequest | PlainMessage<CreateReferralOperationRequest> | undefined
  ): boolean {
    return proto3.util.equals(CreateReferralOperationRequest, a, b)
  }
}

/**
 * @generated from message tech.monstrs.referralprograms.v1alpha1.CreateReferralOperationResponse
 */
export class CreateReferralOperationResponse extends Message<CreateReferralOperationResponse> {
  /**
   * @generated from field: tech.monstrs.referralprograms.v1alpha1.ReferralOperation result = 1;
   */
  result?: ReferralOperation

  constructor(data?: PartialMessage<CreateReferralOperationResponse>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName =
    'tech.monstrs.referralprograms.v1alpha1.CreateReferralOperationResponse'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'result', kind: 'message', T: ReferralOperation },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): CreateReferralOperationResponse {
    return new CreateReferralOperationResponse().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): CreateReferralOperationResponse {
    return new CreateReferralOperationResponse().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): CreateReferralOperationResponse {
    return new CreateReferralOperationResponse().fromJsonString(jsonString, options)
  }

  static equals(
    a: CreateReferralOperationResponse | PlainMessage<CreateReferralOperationResponse> | undefined,
    b: CreateReferralOperationResponse | PlainMessage<CreateReferralOperationResponse> | undefined
  ): boolean {
    return proto3.util.equals(CreateReferralOperationResponse, a, b)
  }
}

/**
 * @generated from message tech.monstrs.referralprograms.v1alpha1.ConfirmReferralOperationRequest
 */
export class ConfirmReferralOperationRequest extends Message<ConfirmReferralOperationRequest> {
  /**
   * @generated from field: string referral_operation_id = 1;
   */
  referralOperationId = ''

  constructor(data?: PartialMessage<ConfirmReferralOperationRequest>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName =
    'tech.monstrs.referralprograms.v1alpha1.ConfirmReferralOperationRequest'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'referral_operation_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ConfirmReferralOperationRequest {
    return new ConfirmReferralOperationRequest().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ConfirmReferralOperationRequest {
    return new ConfirmReferralOperationRequest().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ConfirmReferralOperationRequest {
    return new ConfirmReferralOperationRequest().fromJsonString(jsonString, options)
  }

  static equals(
    a: ConfirmReferralOperationRequest | PlainMessage<ConfirmReferralOperationRequest> | undefined,
    b: ConfirmReferralOperationRequest | PlainMessage<ConfirmReferralOperationRequest> | undefined
  ): boolean {
    return proto3.util.equals(ConfirmReferralOperationRequest, a, b)
  }
}

/**
 * @generated from message tech.monstrs.referralprograms.v1alpha1.ConfirmReferralOperationResponse
 */
export class ConfirmReferralOperationResponse extends Message<ConfirmReferralOperationResponse> {
  /**
   * @generated from field: tech.monstrs.referralprograms.v1alpha1.ReferralOperation result = 1;
   */
  result?: ReferralOperation

  constructor(data?: PartialMessage<ConfirmReferralOperationResponse>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName =
    'tech.monstrs.referralprograms.v1alpha1.ConfirmReferralOperationResponse'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'result', kind: 'message', T: ReferralOperation },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ConfirmReferralOperationResponse {
    return new ConfirmReferralOperationResponse().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ConfirmReferralOperationResponse {
    return new ConfirmReferralOperationResponse().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ConfirmReferralOperationResponse {
    return new ConfirmReferralOperationResponse().fromJsonString(jsonString, options)
  }

  static equals(
    a:
      | ConfirmReferralOperationResponse
      | PlainMessage<ConfirmReferralOperationResponse>
      | undefined,
    b: ConfirmReferralOperationResponse | PlainMessage<ConfirmReferralOperationResponse> | undefined
  ): boolean {
    return proto3.util.equals(ConfirmReferralOperationResponse, a, b)
  }
}

/**
 * @generated from message tech.monstrs.referralprograms.v1alpha1.CreateAndConfirmReferralOperationRequest
 */
export class CreateAndConfirmReferralOperationRequest extends Message<CreateAndConfirmReferralOperationRequest> {
  /**
   * @generated from field: string referral_program = 1;
   */
  referralProgram = ''

  /**
   * @generated from field: string source_id = 2;
   */
  sourceId = ''

  /**
   * @generated from field: string source_type = 3;
   */
  sourceType = ''

  /**
   * @generated from field: string referrer_id = 4;
   */
  referrerId = ''

  /**
   * @generated from field: double amount = 5;
   */
  amount = 0

  constructor(data?: PartialMessage<CreateAndConfirmReferralOperationRequest>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName =
    'tech.monstrs.referralprograms.v1alpha1.CreateAndConfirmReferralOperationRequest'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'referral_program', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'source_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 3, name: 'source_type', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 4, name: 'referrer_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 5, name: 'amount', kind: 'scalar', T: 1 /* ScalarType.DOUBLE */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): CreateAndConfirmReferralOperationRequest {
    return new CreateAndConfirmReferralOperationRequest().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): CreateAndConfirmReferralOperationRequest {
    return new CreateAndConfirmReferralOperationRequest().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): CreateAndConfirmReferralOperationRequest {
    return new CreateAndConfirmReferralOperationRequest().fromJsonString(jsonString, options)
  }

  static equals(
    a:
      | CreateAndConfirmReferralOperationRequest
      | PlainMessage<CreateAndConfirmReferralOperationRequest>
      | undefined,
    b:
      | CreateAndConfirmReferralOperationRequest
      | PlainMessage<CreateAndConfirmReferralOperationRequest>
      | undefined
  ): boolean {
    return proto3.util.equals(CreateAndConfirmReferralOperationRequest, a, b)
  }
}

/**
 * @generated from message tech.monstrs.referralprograms.v1alpha1.CreateAndConfirmReferralOperationResponse
 */
export class CreateAndConfirmReferralOperationResponse extends Message<CreateAndConfirmReferralOperationResponse> {
  /**
   * @generated from field: tech.monstrs.referralprograms.v1alpha1.ReferralOperation result = 1;
   */
  result?: ReferralOperation

  constructor(data?: PartialMessage<CreateAndConfirmReferralOperationResponse>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName =
    'tech.monstrs.referralprograms.v1alpha1.CreateAndConfirmReferralOperationResponse'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'result', kind: 'message', T: ReferralOperation },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): CreateAndConfirmReferralOperationResponse {
    return new CreateAndConfirmReferralOperationResponse().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): CreateAndConfirmReferralOperationResponse {
    return new CreateAndConfirmReferralOperationResponse().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): CreateAndConfirmReferralOperationResponse {
    return new CreateAndConfirmReferralOperationResponse().fromJsonString(jsonString, options)
  }

  static equals(
    a:
      | CreateAndConfirmReferralOperationResponse
      | PlainMessage<CreateAndConfirmReferralOperationResponse>
      | undefined,
    b:
      | CreateAndConfirmReferralOperationResponse
      | PlainMessage<CreateAndConfirmReferralOperationResponse>
      | undefined
  ): boolean {
    return proto3.util.equals(CreateAndConfirmReferralOperationResponse, a, b)
  }
}

/**
 * @generated from message tech.monstrs.referralprograms.v1alpha1.ListReferralOperationsRequest
 */
export class ListReferralOperationsRequest extends Message<ListReferralOperationsRequest> {
  /**
   * @generated from field: tech.monstrs.queries.v1alpha1.Query.Pager pager = 1;
   */
  pager?: Query_Pager

  /**
   * @generated from field: tech.monstrs.queries.v1alpha1.Query.Order order = 2;
   */
  order?: Query_Order

  /**
   * @generated from field: tech.monstrs.referralprograms.v1alpha1.ListReferralOperationsRequest.ReferralOperationsQuery query = 3;
   */
  query?: ListReferralOperationsRequest_ReferralOperationsQuery

  constructor(data?: PartialMessage<ListReferralOperationsRequest>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'tech.monstrs.referralprograms.v1alpha1.ListReferralOperationsRequest'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'pager', kind: 'message', T: Query_Pager },
    { no: 2, name: 'order', kind: 'message', T: Query_Order },
    {
      no: 3,
      name: 'query',
      kind: 'message',
      T: ListReferralOperationsRequest_ReferralOperationsQuery,
    },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ListReferralOperationsRequest {
    return new ListReferralOperationsRequest().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ListReferralOperationsRequest {
    return new ListReferralOperationsRequest().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ListReferralOperationsRequest {
    return new ListReferralOperationsRequest().fromJsonString(jsonString, options)
  }

  static equals(
    a: ListReferralOperationsRequest | PlainMessage<ListReferralOperationsRequest> | undefined,
    b: ListReferralOperationsRequest | PlainMessage<ListReferralOperationsRequest> | undefined
  ): boolean {
    return proto3.util.equals(ListReferralOperationsRequest, a, b)
  }
}

/**
 * @generated from message tech.monstrs.referralprograms.v1alpha1.ListReferralOperationsRequest.ReferralOperationsQuery
 */
export class ListReferralOperationsRequest_ReferralOperationsQuery extends Message<ListReferralOperationsRequest_ReferralOperationsQuery> {
  /**
   * @generated from field: tech.monstrs.queries.v1alpha1.Query.ID id = 1;
   */
  id?: Query_ID

  constructor(data?: PartialMessage<ListReferralOperationsRequest_ReferralOperationsQuery>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName =
    'tech.monstrs.referralprograms.v1alpha1.ListReferralOperationsRequest.ReferralOperationsQuery'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'id', kind: 'message', T: Query_ID },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ListReferralOperationsRequest_ReferralOperationsQuery {
    return new ListReferralOperationsRequest_ReferralOperationsQuery().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ListReferralOperationsRequest_ReferralOperationsQuery {
    return new ListReferralOperationsRequest_ReferralOperationsQuery().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ListReferralOperationsRequest_ReferralOperationsQuery {
    return new ListReferralOperationsRequest_ReferralOperationsQuery().fromJsonString(
      jsonString,
      options
    )
  }

  static equals(
    a:
      | ListReferralOperationsRequest_ReferralOperationsQuery
      | PlainMessage<ListReferralOperationsRequest_ReferralOperationsQuery>
      | undefined,
    b:
      | ListReferralOperationsRequest_ReferralOperationsQuery
      | PlainMessage<ListReferralOperationsRequest_ReferralOperationsQuery>
      | undefined
  ): boolean {
    return proto3.util.equals(ListReferralOperationsRequest_ReferralOperationsQuery, a, b)
  }
}

/**
 * @generated from message tech.monstrs.referralprograms.v1alpha1.ListReferralOperationsResponse
 */
export class ListReferralOperationsResponse extends Message<ListReferralOperationsResponse> {
  /**
   * @generated from field: repeated tech.monstrs.referralprograms.v1alpha1.ReferralOperation referral_operations = 1;
   */
  referralOperations: ReferralOperation[] = []

  /**
   * @generated from field: bool has_next_page = 2;
   */
  hasNextPage = false

  constructor(data?: PartialMessage<ListReferralOperationsResponse>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'tech.monstrs.referralprograms.v1alpha1.ListReferralOperationsResponse'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'referral_operations', kind: 'message', T: ReferralOperation, repeated: true },
    { no: 2, name: 'has_next_page', kind: 'scalar', T: 8 /* ScalarType.BOOL */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ListReferralOperationsResponse {
    return new ListReferralOperationsResponse().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ListReferralOperationsResponse {
    return new ListReferralOperationsResponse().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ListReferralOperationsResponse {
    return new ListReferralOperationsResponse().fromJsonString(jsonString, options)
  }

  static equals(
    a: ListReferralOperationsResponse | PlainMessage<ListReferralOperationsResponse> | undefined,
    b: ListReferralOperationsResponse | PlainMessage<ListReferralOperationsResponse> | undefined
  ): boolean {
    return proto3.util.equals(ListReferralOperationsResponse, a, b)
  }
}

/**
 * @generated from message tech.monstrs.referralprograms.v1alpha1.ListReferralProfitsRequest
 */
export class ListReferralProfitsRequest extends Message<ListReferralProfitsRequest> {
  /**
   * @generated from field: tech.monstrs.queries.v1alpha1.Query.Pager pager = 1;
   */
  pager?: Query_Pager

  /**
   * @generated from field: tech.monstrs.queries.v1alpha1.Query.Order order = 2;
   */
  order?: Query_Order

  /**
   * @generated from field: tech.monstrs.referralprograms.v1alpha1.ListReferralProfitsRequest.ReferralProfitsQuery query = 3;
   */
  query?: ListReferralProfitsRequest_ReferralProfitsQuery

  constructor(data?: PartialMessage<ListReferralProfitsRequest>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'tech.monstrs.referralprograms.v1alpha1.ListReferralProfitsRequest'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'pager', kind: 'message', T: Query_Pager },
    { no: 2, name: 'order', kind: 'message', T: Query_Order },
    { no: 3, name: 'query', kind: 'message', T: ListReferralProfitsRequest_ReferralProfitsQuery },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ListReferralProfitsRequest {
    return new ListReferralProfitsRequest().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ListReferralProfitsRequest {
    return new ListReferralProfitsRequest().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ListReferralProfitsRequest {
    return new ListReferralProfitsRequest().fromJsonString(jsonString, options)
  }

  static equals(
    a: ListReferralProfitsRequest | PlainMessage<ListReferralProfitsRequest> | undefined,
    b: ListReferralProfitsRequest | PlainMessage<ListReferralProfitsRequest> | undefined
  ): boolean {
    return proto3.util.equals(ListReferralProfitsRequest, a, b)
  }
}

/**
 * @generated from message tech.monstrs.referralprograms.v1alpha1.ListReferralProfitsRequest.ReferralProfitsQuery
 */
export class ListReferralProfitsRequest_ReferralProfitsQuery extends Message<ListReferralProfitsRequest_ReferralProfitsQuery> {
  /**
   * @generated from field: tech.monstrs.queries.v1alpha1.Query.ID id = 1;
   */
  id?: Query_ID

  /**
   * @generated from field: tech.monstrs.queries.v1alpha1.Query.ID agent_id = 2;
   */
  agentId?: Query_ID

  /**
   * @generated from field: tech.monstrs.queries.v1alpha1.Query.ID operation_id = 3;
   */
  operationId?: Query_ID

  constructor(data?: PartialMessage<ListReferralProfitsRequest_ReferralProfitsQuery>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName =
    'tech.monstrs.referralprograms.v1alpha1.ListReferralProfitsRequest.ReferralProfitsQuery'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'id', kind: 'message', T: Query_ID },
    { no: 2, name: 'agent_id', kind: 'message', T: Query_ID },
    { no: 3, name: 'operation_id', kind: 'message', T: Query_ID },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ListReferralProfitsRequest_ReferralProfitsQuery {
    return new ListReferralProfitsRequest_ReferralProfitsQuery().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ListReferralProfitsRequest_ReferralProfitsQuery {
    return new ListReferralProfitsRequest_ReferralProfitsQuery().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ListReferralProfitsRequest_ReferralProfitsQuery {
    return new ListReferralProfitsRequest_ReferralProfitsQuery().fromJsonString(jsonString, options)
  }

  static equals(
    a:
      | ListReferralProfitsRequest_ReferralProfitsQuery
      | PlainMessage<ListReferralProfitsRequest_ReferralProfitsQuery>
      | undefined,
    b:
      | ListReferralProfitsRequest_ReferralProfitsQuery
      | PlainMessage<ListReferralProfitsRequest_ReferralProfitsQuery>
      | undefined
  ): boolean {
    return proto3.util.equals(ListReferralProfitsRequest_ReferralProfitsQuery, a, b)
  }
}

/**
 * @generated from message tech.monstrs.referralprograms.v1alpha1.ListReferralProfitsResponse
 */
export class ListReferralProfitsResponse extends Message<ListReferralProfitsResponse> {
  /**
   * @generated from field: repeated tech.monstrs.referralprograms.v1alpha1.ReferralProfit referral_profits = 1;
   */
  referralProfits: ReferralProfit[] = []

  /**
   * @generated from field: bool has_next_page = 2;
   */
  hasNextPage = false

  constructor(data?: PartialMessage<ListReferralProfitsResponse>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'tech.monstrs.referralprograms.v1alpha1.ListReferralProfitsResponse'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'referral_profits', kind: 'message', T: ReferralProfit, repeated: true },
    { no: 2, name: 'has_next_page', kind: 'scalar', T: 8 /* ScalarType.BOOL */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ListReferralProfitsResponse {
    return new ListReferralProfitsResponse().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ListReferralProfitsResponse {
    return new ListReferralProfitsResponse().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ListReferralProfitsResponse {
    return new ListReferralProfitsResponse().fromJsonString(jsonString, options)
  }

  static equals(
    a: ListReferralProfitsResponse | PlainMessage<ListReferralProfitsResponse> | undefined,
    b: ListReferralProfitsResponse | PlainMessage<ListReferralProfitsResponse> | undefined
  ): boolean {
    return proto3.util.equals(ListReferralProfitsResponse, a, b)
  }
}
